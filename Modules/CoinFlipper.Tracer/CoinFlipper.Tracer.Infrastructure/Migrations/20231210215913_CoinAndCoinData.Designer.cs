// <auto-generated />
using System;
using CoinFlipper.Tracer.Infrastructure.Repositories.Postgres.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CoinFlipper.Tracer.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231210215913_CoinAndCoinData")]
    partial class CoinAndCoinData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CoinFlipper.Tracer.Infrastructure.Repositories.Models.CoinDataDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CoinId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("MarketCap")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Volume")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Volume24h")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CoinId");

                    b.ToTable("CoinData");
                });

            modelBuilder.Entity("CoinFlipper.Tracer.Infrastructure.Repositories.Models.CoinDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CoinGeckoId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasAlternateKey("CoinGeckoId");

                    b.HasAlternateKey("Symbol");

                    b.HasIndex("CoinGeckoId");

                    b.HasIndex("Id");

                    b.HasIndex("Symbol");

                    b.ToTable("Coin");
                });

            modelBuilder.Entity("CoinFlipper.Tracer.Infrastructure.Repositories.Models.FearAndGreedDb", b =>
                {
                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Value")
                        .HasPrecision(0)
                        .HasColumnType("integer");

                    b.HasKey("DateTime");

                    b.HasIndex("DateTime");

                    b.ToTable("FearAndGreed");
                });

            modelBuilder.Entity("CoinFlipper.Tracer.Infrastructure.Repositories.Models.CoinDataDb", b =>
                {
                    b.HasOne("CoinFlipper.Tracer.Infrastructure.Repositories.Models.CoinDb", "Coin")
                        .WithMany("CoinData")
                        .HasForeignKey("CoinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coin");
                });

            modelBuilder.Entity("CoinFlipper.Tracer.Infrastructure.Repositories.Models.CoinDb", b =>
                {
                    b.Navigation("CoinData");
                });
#pragma warning restore 612, 618
        }
    }
}
